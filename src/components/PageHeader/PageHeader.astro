---
import ThemeToggle from './ThemeToggle.astro';
import Icon from 'astro-icon';

let parentPathname = '';
let slashCount = 0;
for (const c of Astro.url.pathname) {
  parentPathname += c;
  if (c === '/') slashCount++;
  if (slashCount === 2) break;
}
---

<header>
  <nav id="header-nav" tabindex="-1">
    <ul id="header-nav__list">
      <li><a href="/" class={parentPathname == '/' ? 'active' : ''}>Home</a></li>
      <li><a href="/about/" class={parentPathname == '/about/' ? 'active' : ''}>About</a></li>
      <li><a href="/projects/" class={parentPathname == '/projects/' ? 'active' : ''}>Projects</a></li>
      <li><a href="/articles/" class={parentPathname == '/articles/' ? 'active' : ''}>Articles</a></li>
    </ul>
    <button id="header-nav__close-button" class="header-nav__close-button"><Icon name="icon-x" /></button>
  </nav>
  <ThemeToggle />
  <button id="header-nav__open-button" class="header-nav__open-button"><Icon name="bi:list" /></button>
</header>

<style>
  @import '../../styles/vars.css';
  @import '../../styles/mixins/mixins.css';

  /* Mobile and up */
  header {
    display: flex;
    justify-content: space-between;
    column-gap: toRem(32px);
    padding: 20px 24px;
  }

  nav {
    display: none;
  }

  .nav--overlay {
    position: fixed;
    display: grid;
    align-items: center;
    justify-items: center;
    width: 100%;
    height: 100%;
    inset: 0;
    @mixin theme(background-color, alpha($gray-100, 90%), alpha($gray-950, 90%));
    backdrop-filter: blur(6px);
    z-index: 2;
  }

  .nav--overlay :global(ul) {
    position: relative;
    display: grid;
    row-gap: toRem(16px);
    padding: 16px;
    text-align: center;
    font-size: toRem(20px);
    font-weight: 600;
    z-index: 3;
  }

  a {
    @mixin theme(color, $gray-900, $gray-50);
    &:hover {
      color: $blue;
    }
  }

  .header-nav__open-button {
    @mixin theme-old color, var(--gray-50), var(--gray-900);
    & :global(svg) {
      width: 28px;
    }
  }

  .header-nav__close-button {
    position: absolute;
    top: 1.25rem;
    right: 1.25rem;
    @mixin theme-old color, var(--gray-50), var(--gray-900);
    & :global(svg) {
      width: 16px;
    }
  }

  /* Tablet and up */
  @media (min-width: 768px) {
    header {
      justify-content: flex-end;
    }

    nav {
      display: flex;
      align-items: center;
      gap: 2rem;
    }

    .header-nav__list {
      display: flex !important;
    }

    ul {
      display: flex;
      gap: 2rem;
    }

    a {
      @mixin theme(color, $gray-600, $gray-700);
      &.active {
        @mixin theme(color, $gray-900, $gray-50);
      }
      &.active:hover,
      &:hover {
        color: $blue;
      }
    }

    .header-nav__open-button,
    .header-nav__close-button {
      display: none;
    }
  }
</style>

<script>
  const headerNav = document.getElementById('header-nav');
  const headerNavList = document.getElementById('header-nav__list');
  const menuToggleButton = document.getElementById('header-nav__open-button');

  menuToggleButton.addEventListener('click', (e) => menuButtonHandler(e));
  headerNavList.addEventListener('click', (e) => headerNavListClickHandler(e));
  headerNav.addEventListener('click', (e) => headerNavClickHandler(e));

  function menuButtonHandler(e) {
    headerNav.classList.toggle('nav--overlay');
    headerNav.focus({ preventScroll: true }); // Accessibility: take focus from menu button to headerNav so nav links can be tabbed - https://stackoverflow.com/a/70852588/1954838
  }

  function headerNavListClickHandler(e) {
    e.stopPropagation(); // Stop clicks through list element closing overlay
  }

  function headerNavClickHandler(e) {
    headerNav.classList.remove('nav--overlay');
  }
</script>
